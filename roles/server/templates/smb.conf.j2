{{ ansible_managed | comment }}

[global]
  # Server information
  netbios name = {% if samba_netbios_name is defined and samba_netbios_name %}{{ samba_netbios_name }}{% else %}{{ ansible_facts['hostname'] }}{% endif +%}
  mdns name = {% if samba_mdns_name is defined and samba_mdns_name %}{{ samba_mdns_name }}{% else %}netbios{% endif +%}
  workgroup = {{ samba_workgroup }}
{% if samba_realm is defined and samba_realm %}
  realm = {{ samba_realm }}
{% endif %}
  server string = {{ samba_server_string }}
{% if samba_apple_extensions is defined and samba_apple_extensions | bool %}
  fruit:aapl = yes
{% endif %}

  # Logging
{% if samba_log is defined and samba_log %}
  log file = {{ samba_log }}
  max log size = {{ samba_log_size }}
  log level = {{ samba_log_level }}
{% else %}
  logging = syslog
{% endif %}

  # Authentication
  security = {{ samba_security }}
  passdb backend = {{ samba_passdb_backend }}
  password hash userPassword schemes = CryptSHA256 CryptSHA512
  map to guest = {{ samba_map_to_guest }}
{% if samba_guest_account  is defined and samba_guest_account %}
  guest account = {{ samba_guest_account }}
{% endif %}
{% if samba_username_map is defined and samba_username_map %}
  username map = {{ samba_username_map_file }}
{% endif %}

{% if samba_server_min_protocol is defined and samba_server_min_protocol %}
  # Minimum protocol version offered by the server
  server min protocol = {{ samba_server_min_protocol }}

{% endif %}
{% if samba_server_max_protocol is defined and samba_server_max_protocol %}
  # Maximum protocol version offered by the server
  server max protocol = {{ samba_server_max_protocol }}

{% endif %}
{% if samba_smb_encrypt is defined and samba_smb_encrypt %}
  smb encrypt = {{ samba_smb_encrypt }}

{% endif %}
{% if samba_ntlm_auth is defined and samba_ntlm_auth %}
  ntlm auth = {{ samba_ntlm_auth }}

{% endif %}
{% if samba_restrict_anonymous is defined and samba_restrict_anonymous %}
  restrict anonymous = {{ samba_restrict_anonymous }}

{% endif %}
{% if samba_interfaces | length > 0 %}
  bind interfaces only = yes
  interfaces = 127.0.0.1 {{ samba_interfaces | join(' ') }}

{% endif %}
  # Name resolution
{% if not samba_enable_netbios | bool %}
  disable netbios = yes
  smb ports = 445
{% endif %}
  wins support = {{ samba_wins_support | bool | ternary('yes', 'no') }}
  local master = {{ samba_local_master | bool | ternary('yes', 'no') }}
  domain master = {{ samba_domain_master | bool | ternary('yes', 'no') }}
  preferred master = {{ samba_preferred_master | bool | ternary('yes', 'no') }}
  rpc server dynamic port range = 50000-55000

{% if samba_load_printers %}
  load printers = yes
  printing = {{ samba_printer_type }}
  printcap name = {{ samba_printer_type }}
  {% if samba_printer_type == 'cups' %}
    cups server = {{ samba_cups_server }}
  {% endif %}
{% else %}
  # Don't load printers
  load printers = no
  printing = bsd
  printcap name = /dev/null
  disable spoolss = yes
{% endif %}

{% if samba_mitigate_cve_2017_7494 and samba_version.stdout is version('3.5.0', '>=') and samba_version.stdout is version('4.6.4', '<') %}
  # Fix for CVE-2017-7494 in Samba versions from 3.5.0 and before 4.6.4
  # https://access.redhat.com/security/cve/cve-2017-7494
  nt pipe support = no
{% endif %}

{% if samba_global_include is defined and samba_global_include %}
  include = {{ samba_configuration_dir }}/{{ samba_global_include | basename }}
{% endif %}
{% if samba_shares is defined and samba_shares | length > 0 and samba_role == 'dc_primary' %}
  # https://wiki.samba.org/index.php/Setting_up_RFC2307_in_AD - recommended only if more shares than netlogon+sysvol on dc.
  idmap_ldb:use rfc2307 = yes
{% endif %}

{% if samba_global_config_extras is defined and samba_global_config_extras %}
  # User-defined extra config
  {% for line in samba_global_config_extras | split('\n') -%}
  {{ line | trim }}
  {% endfor -%}
{% endif %}

{% if samba_load_homes %}
# Make home directories accessible
[homes]
  comment = Home Directories
  browseable = no
  writeable = yes
{% endif %}

{% if samba_homes_include is defined and samba_homes_include %}
  include = {{ samba_configuration_dir }}/{{ samba_homes_include }}
{% endif %}

{% if samba_shares is defined and samba_shares | length > 0 %}
## Shared directories
{% for share in samba_shares %}
[{{ share.name }}]
{% if share.comment is defined and share.comment %}
  comment = {{ share.comment }}
{% endif %}
{% if share.vfs_objects is defined and share.vfs_objects | length > 0 %}
  vfs objects = {% for obj in share.vfs_objects %}{{obj.name}} {% endfor %}

{% for obj in share.vfs_objects %}
{% if obj.options is defined and obj.options | length > 0 %}
{% for opt in obj.options %}
{% if ':' in opt.name %}
  {{ opt.name }} = {{ opt.value }}
{% else %}
  {{ obj.name }}:{{ opt.name }} = {{ opt.value }}
{% endif %}
{% endfor %}{% endif %}
{% endfor %}{% endif %}
  path = {{ share.path | default([samba_shares_root,share.name] | join('/')) }}
  public = {{ share.public | default('no') | bool | ternary('yes', 'no') }}
{% if share.valid_users is defined and share.valid_users %}
  valid users = {{ share.valid_users }}
{% endif %}
{% if share.write_list is defined and share.write_list %}
  write list = {{ share.write_list }}
{% endif %}
{% if share.group is defined and share.group %}
  force group = {{ share.group }}
{% endif %}
{% if share.user is defined and share.user %}
  force user = {{ share.user }}
{% endif %}
{% if share.guest_ok is defined %}
  guest ok = {{ share.guest_ok | bool | ternary('yes', 'no')  }}
{% endif %}
{% if share.browsable is defined %}
  browsable = {{ share.browsable | bool | ternary('yes', 'no') }}
{% endif %}
{% if share.browseable is defined %}
  browseable = {{ share.browseable | bool | ternary('yes', 'no') }}
{% endif %}
{% if share.writable is defined %}
  writable = {{ share.writable | bool | ternary('yes', 'no') }}
{% endif %}
{% if share.writeable is defined %}
  writeable = {{ share.writeable | bool | ternary('yes', 'no') }}
{% endif %}
{% if share.read_only is defined %}
  read only = {{ share.read_only | bool | ternary('yes', 'no') }}
{% endif %}
  create mode = {{ share.create_mode | default('0664') }}
  force create mode = {{ share.force_create_mode | default('0664') }}
  directory mode = {{ share.directory_mode | default('0775') }}
  force directory mode = {{ share.force_directory_mode | default('0775') }}
{% if share.include_file is defined and share.include_file %}
  include = {{ samba_configuration_dir }}/{{ share.include_file | basename }}
{% endif %}
{% if share.hosts_allow is defined and share.hosts_allow | length > 0 %}
  hosts allow = {{ share.hosts_allow | join(' ') }}
{% endif %}
{% if share.hosts_deny is defined and share.hosts_deny | length > 0 %}
  hosts deny = {{ share.hosts_deny | join(' ') }}
{% endif %}
{% if share.audit is defined and share.audit | bool %}
  # SambaAudit configuration
  # https://www.samba.org/samba/docs/current/man-html/vfs_full_audit.8.html
  # https://unix.stackexchange.com/questions/658691/samba-has-a-module-vfs-full-audit-what-does-each-object-actually-mean-within-th
  # https://access.redhat.com/solutions/7011345
  vfs object = full_audit
  full_audit:prefix = %u|%I|%S
  full_audit:success = mkdirat renameat unlinkat create_file
  full_audit:failure = mkdirat renameat unlinkat create_file
  full_audit:facility = local5
  full_audit:priority = notice
{% endif %}

{% endfor %}
{% endif %}
{% if samba_role == 'dc_primary' or samba_role == 'dc_secondary' %}
[netlogon]
  path = /var/lib/samba/sysvol/{{ smb_realm }}/scripts
  read only = No

[sysvol]
  path = /var/lib/samba/sysvol
  read only = No
{% endif %}
